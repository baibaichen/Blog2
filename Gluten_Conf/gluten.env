#!/bin/bash

# 定义验证 Gluten JAR 文件的函数
validate_gluten_jars() {
    local GLUTEN_HOME=${1}
    local REQUIRED_JARS=(
        "celeborn-client-spark-3-shaded_2.13-0.5.4.jar"
        "delta-spark_2.13-3.2.0.jar"
        "delta-storage-3.2.0.jar"
        "gluten.jar"
    )

    local missing_count=0
    for jar in "${REQUIRED_JARS[@]}"; do
        if ! ls "${GLUTEN_HOME}/jars/spark35/"*"${jar}" &> /dev/null; then
            echo "MISSING: $jar"
            missing_count=$((missing_count + 1))
        fi
    done

    if [ "$missing_count" -eq 0 ]; then
        echo "All required Gluten JARs are present."
        return 0
    else
        echo "ERROR: Missing $missing_count required Gluten JAR files."
        return 1
    fi
}

# 定义主配置函数（支持传递构建类型参数）
setup_environment() {

    # Spark/Gluten 配置
    local TYPE=${1:-relwithdebinfo}  # 通过参数指定构建类型，默认relwithdebinfo[7,8](@ref)
    local BACKEND=/home/chang/SourceCode/backend    

    local GLUTEN_HOME=/home/chang/SourceCode/gluten/dist/gluten-1.5.0-SNAPSHOT-ubuntu24.04-x86_64
    # 执行 Gluten JAR 文件验证
    if ! validate_gluten_jars "$GLUTEN_HOME"; then
        echo "ERROR: Missing required Gluten JAR files."
        return 1
    fi

    # 动态生成 LIBCH 路径
    local LIBCH_PATH
    if [[ "$TYPE" == "debug" ]]; then
        LIBCH_PATH="${BACKEND}/cmake-build-${TYPE}-clang19/utils/extern-local-engine/libchd.so"
    else
        LIBCH_PATH="${BACKEND}/cmake-build-${TYPE}-clang19/utils/extern-local-engine/libch.so"
    fi
    # 路径验证（失败立即终止）
    if [ ! -f "$LIBCH_PATH" ]; then
        echo "Error: $LIBCH_PATH does not exist. Check build directory or TYPE."
        return 1  # 使用 return 代替 exit 避免退出整个shell[2,8](@ref)
    fi

    # Java 环境配置
    export LD_PRELOAD=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/libjsig.so:${LIBCH_PATH}
    export SPARK_HOME=/home/chang/test/spark-3.5.3-bin-hadoop3-scala2.13
    export GLUTEN_JARS=${GLUTEN_HOME}/jars/spark35/*
    export LIBCH="$LIBCH_PATH"

    # 数据目录配置
    export LOCAL_DIR=/home/chang/test/data    

   # 打印指定的导出变量
    echo "Exported variables:"
    echo "LD_PRELOAD=${LD_PRELOAD}"
    echo "SPARK_HOME=${SPARK_HOME}"
    echo "GLUTEN_JARS=${GLUTEN_JARS}"
    echo "LIBCH=${LIBCH}"    
    echo "LOCAL_DIR=${LOCAL_DIR}"
}

# 函数调用示例：
# setup_environment debug        # 指定debug模式
# setup_environment              # 使用默认relwithdebinfo模式

setup_environment